// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mendixblockchain.actions;

import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.Signature;
import java.security.spec.X509EncodedKeySpec;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import sun.misc.BASE64Decoder;

public class VerifySignature extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String BlockData;
	private java.lang.String Sign;
	private java.lang.String PublicKey;

	public VerifySignature(IContext context, java.lang.String BlockData, java.lang.String Sign, java.lang.String PublicKey)
	{
		super(context);
		this.BlockData = BlockData;
		this.Sign = Sign;
		this.PublicKey = PublicKey;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		
		byte[] publikKeyBuytes = new BASE64Decoder().decodeBuffer(this.PublicKey);
		KeyFactory kf = KeyFactory.getInstance("RSA"); // or "EC" or whatever
		PublicKey publicKey = kf.generatePublic(new X509EncodedKeySpec  (publikKeyBuytes));
		
	    Signature sig = Signature.getInstance("SHA1WithRSA");
       
	    sig.initVerify(publicKey);
        sig.update( this.BlockData.getBytes("UTF8"));
        
        return sig.verify(new BASE64Decoder().decodeBuffer(Sign));

		
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "VerifySignature";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
