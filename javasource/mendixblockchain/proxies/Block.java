// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mendixblockchain.proxies;

public class Block
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject blockMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MendixBlockchain.Block";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Number("Number"),
		Nonce("Nonce"),
		PrevHash("PrevHash"),
		Hash("Hash"),
		IsValid("IsValid");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Block(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MendixBlockchain.Block"));
	}

	protected Block(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject blockMendixObject)
	{
		if (blockMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MendixBlockchain.Block", blockMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MendixBlockchain.Block");

		this.blockMendixObject = blockMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Block.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static mendixblockchain.proxies.Block initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return mendixblockchain.proxies.Block.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static mendixblockchain.proxies.Block initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mendixblockchain.proxies.Block(context, mendixObject);
	}

	public static mendixblockchain.proxies.Block load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mendixblockchain.proxies.Block.initialize(context, mendixObject);
	}

	public static java.util.List<mendixblockchain.proxies.Block> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<mendixblockchain.proxies.Block> result = new java.util.ArrayList<mendixblockchain.proxies.Block>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MendixBlockchain.Block" + xpathConstraint))
			result.add(mendixblockchain.proxies.Block.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Number
	 */
	public final java.lang.Integer getNumber()
	{
		return getNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of Number
	 */
	public final java.lang.Integer getNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Number.toString());
	}

	/**
	 * Set value of Number
	 * @param number
	 */
	public final void setNumber(java.lang.Integer number)
	{
		setNumber(getContext(), number);
	}

	/**
	 * Set value of Number
	 * @param context
	 * @param number
	 */
	public final void setNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer number)
	{
		getMendixObject().setValue(context, MemberNames.Number.toString(), number);
	}

	/**
	 * @return value of Nonce
	 */
	public final java.lang.Long getNonce()
	{
		return getNonce(getContext());
	}

	/**
	 * @param context
	 * @return value of Nonce
	 */
	public final java.lang.Long getNonce(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Nonce.toString());
	}

	/**
	 * Set value of Nonce
	 * @param nonce
	 */
	public final void setNonce(java.lang.Long nonce)
	{
		setNonce(getContext(), nonce);
	}

	/**
	 * Set value of Nonce
	 * @param context
	 * @param nonce
	 */
	public final void setNonce(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long nonce)
	{
		getMendixObject().setValue(context, MemberNames.Nonce.toString(), nonce);
	}

	/**
	 * @return value of PrevHash
	 */
	public final java.lang.String getPrevHash()
	{
		return getPrevHash(getContext());
	}

	/**
	 * @param context
	 * @return value of PrevHash
	 */
	public final java.lang.String getPrevHash(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PrevHash.toString());
	}

	/**
	 * Set value of PrevHash
	 * @param prevhash
	 */
	public final void setPrevHash(java.lang.String prevhash)
	{
		setPrevHash(getContext(), prevhash);
	}

	/**
	 * Set value of PrevHash
	 * @param context
	 * @param prevhash
	 */
	public final void setPrevHash(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String prevhash)
	{
		getMendixObject().setValue(context, MemberNames.PrevHash.toString(), prevhash);
	}

	/**
	 * @return value of Hash
	 */
	public final java.lang.String getHash()
	{
		return getHash(getContext());
	}

	/**
	 * @param context
	 * @return value of Hash
	 */
	public final java.lang.String getHash(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Hash.toString());
	}

	/**
	 * Set value of Hash
	 * @param hash
	 */
	public final void setHash(java.lang.String hash)
	{
		setHash(getContext(), hash);
	}

	/**
	 * Set value of Hash
	 * @param context
	 * @param hash
	 */
	public final void setHash(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String hash)
	{
		getMendixObject().setValue(context, MemberNames.Hash.toString(), hash);
	}

	/**
	 * @return value of IsValid
	 */
	public final java.lang.Boolean getIsValid()
	{
		return getIsValid(getContext());
	}

	/**
	 * @param context
	 * @return value of IsValid
	 */
	public final java.lang.Boolean getIsValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsValid.toString());
	}

	/**
	 * Set value of IsValid
	 * @param isvalid
	 */
	public final void setIsValid(java.lang.Boolean isvalid)
	{
		setIsValid(getContext(), isvalid);
	}

	/**
	 * Set value of IsValid
	 * @param context
	 * @param isvalid
	 */
	public final void setIsValid(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isvalid)
	{
		getMendixObject().setValue(context, MemberNames.IsValid.toString(), isvalid);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return blockMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mendixblockchain.proxies.Block that = (mendixblockchain.proxies.Block) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MendixBlockchain.Block";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
